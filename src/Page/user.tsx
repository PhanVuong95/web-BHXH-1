/* eslint-disable @typescript-eslint/no-unused-expressions */
import { useEffect, useRef, useState } from "react";
import users from "../assets/user.png";
import HeaderTitle from "../Components/HeaderTitle";
import imagesIocn from "../assets/icon/images";
import HistoryPage from "./history_page";
import { useNavigate } from "react-router-dom";
import Modal from "react-modal";
import { toast } from "react-toastify";
import axios from "axios";
import { Input } from "antd";
import IntroducingPartnersPage from "../Components/ctv/IntroducingPartners";
import {
  isValidEmptyString,
  isValidEmail,
  isValidPhone,
} from "../Utils/validateString";
import ReportPartnerPage from "../Components/ctv/ReportPartnerPage";
import ListCollabrorates from "../Components/ctv/ListCollabrorates";
import ProfilePartnerDetailPage from "../Utils/ProfilePartnerDetailPage";
import { HistoryPageProps, MyComponentProps, User } from "../Models";
import BankInfoPage from "../Components/ctv/BankInfoPage";
import RegisterPartnerInfoPage from "../Components/ctv/RegisterPartnerInfo";
import ListsHistoryPage from "./lists_history_page";
import ListHistoryBHYT from "./BHYT/list_history_bhyt";
import PrivacyPolicyPage from "../Components/privacy_policy";

const UserPage: React.FunctionComponent<HistoryPageProps> = () => {
  const [user, setUser] = useState<any>(null);
  const [activeContent, setActiveContent] = useState<React.ReactNode>(null);
  const [activeButton, setActiveButton] = useState<string>("");

  const [currentStep, setCurrentStep] = useState(1);

  const handleNext = () => {
    setCurrentStep((prevStep) => {
      const nextStep = prevStep === 1 ? 2 : 1;
      setActiveContent(
        nextStep === 1 ? (
          <RegisterPartnerInfo handleNext={handleNext} />
        ) : (
          <RegisterCollaborate />
        )
      );
      return nextStep;
    });
  };

  useEffect(() => {
    const profile = localStorage.getItem("profile");

    if (profile) {
      setUser(JSON.parse(profile));
    }
  }, []);

  const handleLogout = () => {
    localStorage.removeItem("accessToken");
    localStorage.removeItem("profile");
    setUser(null);
  };

  // console.log(user?.roleId);
  const handleDropdownItemClick = (item: string) => {
    setActiveButton(item);
    switch (item) {
      case "Account Info":
        setActiveContent(<AccountInfo user={user} />);
        break;
      case "Activities":
        setActiveContent(
          <Activities
            onViewCollaborators={() =>
              console.log("View collaborators clicked")
            }
            onViewBHYT={() => console.log("View BHYT clicked")}
          />
        );
        break;
      case "Partner Info":
        setActiveContent(<PartnerInfo user={user} />);
        break;
      case "Register Partner Info":
        setActiveContent(
          currentStep === 1 ? (
            <RegisterPartnerInfo handleNext={handleNext} />
          ) : (
            <RegisterCollaborate />
          )
        );
        break;
      case "Guidelines":
        setActiveContent(<Guidelines />);
        break;
      case "Terms":
        setActiveContent(<Terms />);
        break;
      case "Chat":
        setActiveContent(<Chat />);
        break;
      default:
        setActiveContent(null);
    }
  };

  return (
    <div>
      <HeaderTitle links={[{ title: "Thông tin tài khoản" }]} />
      <div className="container px-3 xl:px-0  py-[40px] mx-auto items-start flex flex-col lg:flex-row gap-[40px] max-w-[1280px]">
        <div className="w-full p-[20px] lg:w-1/2 bg-blue-500 user-card-border border-[1px] border-[#B9BDC1]">
          <section className="flex items-center flex-col gap-4">
            <div className="relative">
              <img
                className="rounded-full avatar-img cursor-pointer"
                src={user && user.photo ? user.photo : users}
                alt="avatar-img"
              />
            </div>
            <div className="user">
              <div className="flex flex-col items-center gap-1 name-user">
                <span className="text-[#0077D5] font-normal">Xin chào!</span>
                <span className="text-black font-medium ">
                  {/* {user.username} */}
                  {user?.fullName}
                </span>
              </div>
              <p className="text-[#D1D1D6] text-[14px] font-normal float-right phone-user">
                {user?.phone}
              </p>
            </div>
            <div
              className={`user-car-button ${
                activeButton === "Account Info" ? "active" : ""
              }`}
              onClick={() => handleDropdownItemClick("Account Info")}
            >
              <div className="border-icon">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="18"
                  viewBox="0 0 18 18"
                  fill="none"
                >
                  <g clipPath="url(#clip0_6001_27196)">
                    <path
                      d="M11.9326 17.2971C11.0144 17.6227 10.0274 17.8002 8.99922 17.8002C7.97109 17.8002 6.98402 17.6227 6.06589 17.2971V15.6002C6.06589 13.9825 7.38149 12.6669 8.99922 12.6669C10.617 12.6669 11.9326 13.9825 11.9326 15.6002V17.2971ZM8.99922 5.33353C8.19035 5.33353 7.53255 5.99133 7.53255 6.8002C7.53255 7.60906 8.19035 8.26686 8.99922 8.26686C9.80809 8.26686 10.4659 7.60906 10.4659 6.8002C10.4659 5.99133 9.80809 5.33353 8.99922 5.33353ZM17.7992 9.0002C17.7992 12.2511 16.0275 15.0949 13.3992 16.6188V15.6002C13.3992 13.1736 11.4258 11.2002 8.99922 11.2002C6.57262 11.2002 4.59922 13.1736 4.59922 15.6002V16.6188C1.97095 15.0949 0.199219 12.2511 0.199219 9.0002C0.199219 4.14773 4.14675 0.200195 8.99922 0.200195C13.8517 0.200195 17.7992 4.14773 17.7992 9.0002ZM11.9326 6.8002C11.9326 5.18246 10.617 3.86686 8.99922 3.86686C7.38149 3.86686 6.06589 5.18246 6.06589 6.8002C6.06589 8.41793 7.38149 9.73353 8.99922 9.73353C10.617 9.73353 11.9326 8.41793 11.9326 6.8002Z"
                      fill="#0077D5"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_6001_27196">
                      <rect
                        width="17.6"
                        height="17.6"
                        fill="#0077D5"
                        transform="translate(0.199219 0.200195)"
                      />
                    </clipPath>
                  </defs>
                </svg>
              </div>
              Thông tin tài khoản
            </div>
            <div
              className={`user-car-button ${
                activeButton === "Activities" ? "active" : ""
              }`}
              onClick={() => handleDropdownItemClick("Activities")}
            >
              <div className="border-icon">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="18"
                  viewBox="0 0 18 18"
                  fill="none"
                >
                  <path
                    d="M9.2125 3.60059C8.14448 3.60059 7.10045 3.91729 6.21242 4.51065C5.3244 5.10401 4.63227 5.94737 4.22355 6.93409C3.81484 7.92082 3.7079 9.00658 3.91626 10.0541C4.12462 11.1016 4.63892 12.0638 5.39413 12.819C6.14933 13.5742 7.11152 14.0885 8.15901 14.2968C9.20651 14.5052 10.2923 14.3982 11.279 13.9895C12.2657 13.5808 13.1091 12.8887 13.7024 12.0007C14.2958 11.1126 14.6125 10.0686 14.6125 9.00059C14.6109 7.5689 14.0415 6.19629 13.0292 5.18394C12.0168 4.17158 10.6442 3.60215 9.2125 3.60059ZM11.6708 10.8623C11.6229 10.9229 11.562 10.972 11.4925 11.0058C11.4231 11.0397 11.3469 11.0574 11.2696 11.0577C11.1533 11.0587 11.0404 11.0186 10.9507 10.9446L8.89358 9.40173C8.83301 9.35381 8.78399 9.29287 8.75017 9.22343C8.71635 9.15399 8.69859 9.07782 8.69822 9.00059V5.40059C8.69822 5.26419 8.7524 5.13338 8.84885 5.03693C8.94529 4.94048 9.0761 4.8863 9.2125 4.8863C9.3489 4.8863 9.47971 4.94048 9.57616 5.03693C9.6726 5.13338 9.72679 5.26419 9.72679 5.40059V8.75373L11.5886 10.1423C11.6421 10.1836 11.6868 10.2351 11.72 10.294C11.7532 10.3528 11.7743 10.4178 11.782 10.4849C11.7896 10.5521 11.7838 10.6201 11.7647 10.6849C11.7456 10.7497 11.7136 10.81 11.6708 10.8623Z"
                    fill="#0077D5"
                  />
                  <path
                    d="M9.21429 1.28613C7.68855 1.28613 6.19707 1.73857 4.92846 2.58622C3.65985 3.43388 2.67109 4.63869 2.08722 6.04829C1.50334 7.45789 1.35057 9.00897 1.64823 10.5054C1.94589 12.0018 2.6806 13.3764 3.75946 14.4552C4.83833 15.5341 6.21288 16.2688 7.70931 16.5665C9.20573 16.8641 10.7568 16.7114 12.1664 16.1275C13.576 15.5436 14.7808 14.5548 15.6285 13.2862C16.4761 12.0176 16.9286 10.5262 16.9286 9.00042C16.9261 6.95522 16.1125 4.99451 14.6664 3.54834C13.2202 2.10217 11.2595 1.28862 9.21429 1.28613ZM9.21429 15.4633C7.93606 15.4633 6.68653 15.0842 5.62372 14.3741C4.56091 13.6639 3.73255 12.6546 3.2434 11.4736C2.75424 10.2927 2.62625 8.99325 2.87562 7.73958C3.12499 6.48591 3.74052 5.33434 4.64436 4.43049C5.54821 3.52665 6.69978 2.91112 7.95345 2.66175C9.20712 2.41238 10.5066 2.54037 11.6875 3.02952C12.8684 3.51868 13.8778 4.34704 14.5879 5.40985C15.2981 6.47266 15.6771 7.72219 15.6771 9.00042C15.6755 10.714 14.994 12.3569 13.7824 13.5685C12.5707 14.7802 10.9278 15.4616 9.21429 15.4633Z"
                    fill="#0077D5"
                  />
                </svg>
              </div>
              Hoạt động
            </div>
            {user?.roleId === 1003 && (
              <div
                className={`user-car-button ${
                  activeButton === "Partner Info" ? "active" : ""
                }`}
                onClick={() => handleDropdownItemClick("Partner Info")}
              >
                <div className="border-icon">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="18"
                    viewBox="0 0 18 18"
                    fill="none"
                  >
                    <g clipPath="url(#clip0_6001_27215)">
                      <path
                        d="M13.0329 6.06686C14.6529 6.06686 15.9663 7.38026 15.9663 9.0002C15.9663 10.6201 14.6529 11.9335 13.0329 11.9335C11.413 11.9335 10.0996 10.6201 10.0996 9.0002C10.0996 7.38026 11.413 6.06686 13.0329 6.06686ZM8.9996 6.06686C10.6195 6.06686 11.9329 4.75346 11.9329 3.13353C11.9329 1.5136 10.6195 0.200195 8.9996 0.200195C7.37967 0.200195 6.06627 1.5136 6.06627 3.13353C6.06627 4.75346 7.37967 6.06686 8.9996 6.06686ZM4.96627 11.9335C6.5862 11.9335 7.8996 10.6201 7.8996 9.0002C7.8996 7.38026 6.5862 6.06686 4.96627 6.06686C3.34633 6.06686 2.03293 7.38026 2.03293 9.0002C2.03293 10.6201 3.34633 11.9335 4.96627 11.9335ZM17.7659 16.4296C17.2041 14.2142 15.1831 12.6669 12.8496 12.6669C11.3228 12.6669 9.93827 13.3379 8.9996 14.4181C8.06167 13.3386 6.67713 12.6669 5.1496 12.6669C2.81687 12.6669 0.795066 14.2142 0.233332 16.4296C0.0837322 17.0185 0.440132 17.6169 1.029 17.7665C1.6186 17.9168 2.217 17.5597 2.36587 16.9708C2.5294 16.3255 2.92173 15.7857 3.44387 15.4132L4.48227 16.7435C4.82767 17.1754 5.48473 17.1754 5.83087 16.7435L6.87807 15.4279C7.3892 15.8004 7.772 16.335 7.93333 16.9715C7.93553 16.9811 8.13353 17.8017 9.00033 17.8017C9.86713 17.8017 10.0637 16.9818 10.0659 16.9715C10.2294 16.3262 10.6217 15.7872 11.1439 15.4139L12.1823 16.7442C12.5277 17.1761 13.1847 17.1761 13.5309 16.7442L14.5781 15.4286C15.0899 15.8011 15.472 16.3357 15.6333 16.9723C15.7822 17.5611 16.3843 17.9175 16.9695 17.7679C17.5591 17.6183 17.9147 17.0199 17.7659 16.4311V16.4296Z"
                        fill="#0077D5"
                      />
                    </g>
                    <defs>
                      <clipPath id="clip0_6001_27215">
                        <rect
                          width="17.6"
                          height="17.6"
                          fill="white"
                          transform="translate(0.199219 0.200195)"
                        />
                      </clipPath>
                    </defs>
                  </svg>
                </div>
                Thông tin đối tác
              </div>
            )}
            {user?.roleId === 1002 && (
              <div
                className={`user-car-button ${
                  activeButton === "Register Partner Info" ? "active" : ""
                }`}
                onClick={() => handleDropdownItemClick("Register Partner Info")}
              >
                <div className="border-icon">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="18"
                    viewBox="0 0 18 18"
                    fill="none"
                  >
                    <g clipPath="url(#clip0_6001_27215)">
                      <path
                        d="M13.0329 6.06686C14.6529 6.06686 15.9663 7.38026 15.9663 9.0002C15.9663 10.6201 14.6529 11.9335 13.0329 11.9335C11.413 11.9335 10.0996 10.6201 10.0996 9.0002C10.0996 7.38026 11.413 6.06686 13.0329 6.06686ZM8.9996 6.06686C10.6195 6.06686 11.9329 4.75346 11.9329 3.13353C11.9329 1.5136 10.6195 0.200195 8.9996 0.200195C7.37967 0.200195 6.06627 1.5136 6.06627 3.13353C6.06627 4.75346 7.37967 6.06686 8.9996 6.06686ZM4.96627 11.9335C6.5862 11.9335 7.8996 10.6201 7.8996 9.0002C7.8996 7.38026 6.5862 6.06686 4.96627 6.06686C3.34633 6.06686 2.03293 7.38026 2.03293 9.0002C2.03293 10.6201 3.34633 11.9335 4.96627 11.9335ZM17.7659 16.4296C17.2041 14.2142 15.1831 12.6669 12.8496 12.6669C11.3228 12.6669 9.93827 13.3379 8.9996 14.4181C8.06167 13.3386 6.67713 12.6669 5.1496 12.6669C2.81687 12.6669 0.795066 14.2142 0.233332 16.4296C0.0837322 17.0185 0.440132 17.6169 1.029 17.7665C1.6186 17.9168 2.217 17.5597 2.36587 16.9708C2.5294 16.3255 2.92173 15.7857 3.44387 15.4132L4.48227 16.7435C4.82767 17.1754 5.48473 17.1754 5.83087 16.7435L6.87807 15.4279C7.3892 15.8004 7.772 16.335 7.93333 16.9715C7.93553 16.9811 8.13353 17.8017 9.00033 17.8017C9.86713 17.8017 10.0637 16.9818 10.0659 16.9715C10.2294 16.3262 10.6217 15.7872 11.1439 15.4139L12.1823 16.7442C12.5277 17.1761 13.1847 17.1761 13.5309 16.7442L14.5781 15.4286C15.0899 15.8011 15.472 16.3357 15.6333 16.9723C15.7822 17.5611 16.3843 17.9175 16.9695 17.7679C17.5591 17.6183 17.9147 17.0199 17.7659 16.4311V16.4296Z"
                        fill="#0077D5"
                      />
                    </g>
                    <defs>
                      <clipPath id="clip0_6001_27215">
                        <rect
                          width="17.6"
                          height="17.6"
                          fill="white"
                          transform="translate(0.199219 0.200195)"
                        />
                      </clipPath>
                    </defs>
                  </svg>
                </div>
                Đăng ký đối tác
              </div>
            )}

            <div
              className={`user-car-button ${
                activeButton === "Guidelines" ? "active" : ""
              }`}
              onClick={() => handleDropdownItemClick("Guidelines")}
            >
              <div className="border-icon">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="18"
                  viewBox="0 0 18 18"
                  fill="none"
                >
                  <g clipPath="url(#clip0_6001_27222)">
                    <path
                      d="M14.8664 0.200195H6.06641V13.4002H16.3331V1.66687C16.333 0.856861 15.6764 0.200195 14.8664 0.200195Z"
                      fill="#0077D5"
                    />
                    <path
                      d="M3.86406 0.200195C2.64904 0.200195 1.66406 1.18518 1.66406 2.4002V13.9612C2.06677 13.5993 2.5893 13.3994 3.13074 13.4002H4.59738V0.200195H3.86406Z"
                      fill="#0077D5"
                    />
                    <path
                      d="M16.3307 17.8005H3.13074C2.32073 17.8005 1.66406 17.1439 1.66406 16.3339C1.66406 15.5239 2.32073 14.8672 3.13074 14.8672H16.3307V17.8005Z"
                      fill="#0077D5"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_6001_27222">
                      <rect
                        width="17.6"
                        height="17.6"
                        fill="white"
                        transform="translate(0.199219 0.200195)"
                      />
                    </clipPath>
                  </defs>
                </svg>
              </div>
              Tài liệu hướng dẫn
            </div>
            <div
              className={`user-car-button ${
                activeButton === "Terms" ? "active" : ""
              }`}
              onClick={() => handleDropdownItemClick("Terms")}
            >
              <div className="border-icon">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="18"
                  viewBox="0 0 18 18"
                  fill="none"
                >
                  <g clipPath="url(#clip0_6001_27231)">
                    <path
                      d="M13.8235 1.76971L9.22913 0.237772C9.0787 0.18767 8.91609 0.18767 8.76566 0.237772L4.17133 1.76971C3.44086 2.01235 2.80543 2.47903 2.35534 3.10343C1.90524 3.72783 1.66336 4.47819 1.66406 5.24791V9.00037C1.66406 14.5466 8.41073 17.6097 8.69966 17.7373C8.7934 17.7789 8.89483 17.8005 8.9974 17.8005C9.09997 17.8005 9.2014 17.7789 9.29513 17.7373C9.58406 17.6097 16.3307 14.5466 16.3307 9.00037V5.24791C16.3314 4.47819 16.0896 3.72783 15.6395 3.10343C15.1894 2.47903 14.5539 2.01235 13.8235 1.76971ZM12.4573 7.32617L9.32446 10.459C9.19626 10.588 9.04371 10.6903 8.87565 10.76C8.70759 10.8296 8.52737 10.8651 8.34546 10.8645H8.32126C8.13565 10.8617 7.95254 10.8212 7.78301 10.7456C7.61348 10.67 7.46105 10.5607 7.33493 10.4245L5.64386 8.66451C5.57063 8.59656 5.51205 8.51436 5.47172 8.42296C5.43139 8.33156 5.41016 8.23288 5.40933 8.13298C5.4085 8.03308 5.4281 7.93407 5.46691 7.84201C5.50572 7.74996 5.56294 7.6668 5.63504 7.59765C5.70714 7.5285 5.79262 7.47481 5.88621 7.43988C5.97981 7.40494 6.07956 7.3895 6.17934 7.3945C6.27911 7.3995 6.37682 7.42484 6.46645 7.46895C6.55609 7.51306 6.63577 7.57503 6.7006 7.65104L8.3462 9.36704L11.4174 6.28704C11.5557 6.15346 11.7409 6.07954 11.9332 6.08121C12.1255 6.08288 12.3094 6.16001 12.4454 6.29597C12.5814 6.43194 12.6585 6.61587 12.6602 6.80815C12.6618 7.00042 12.5879 7.18566 12.4543 7.32397L12.4573 7.32617Z"
                      fill="#0077D5"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_6001_27231">
                      <rect
                        width="17.6"
                        height="17.6"
                        fill="white"
                        transform="translate(0.199219 0.200195)"
                      />
                    </clipPath>
                  </defs>
                </svg>
              </div>
              Điều kiện và điều khoản sử dụng dịch vụ
            </div>
            <div
              className={`user-car-button ${
                activeButton === "Chat" ? "active" : ""
              }`}
              onClick={() => handleDropdownItemClick("Chat")}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="32"
                height="32"
                viewBox="0 0 32 32"
                fill="none"
              >
                <mask id="path-1-inside-1_4546_34813" fill="white">
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M32 16L31.9995 16.7426L31.9979 17.1788L31.9952 17.5446L31.9915 17.871L31.9867 18.1709L31.9808 18.4512L31.9739 18.7161L31.9659 18.9685L31.9568 19.2104L31.9467 19.4433L31.9355 19.6683L31.9232 19.8864L31.9099 20.0983L31.8955 20.3045L31.88 20.5057L31.8635 20.7021L31.8459 20.8943L31.8272 21.0824L31.8075 21.2668L31.7867 21.4476L31.7648 21.6252L31.7419 21.7996L31.7179 21.971L31.6928 22.1396L31.6667 22.3056L31.6395 22.4689L31.6112 22.6298L31.5818 22.7884L31.5514 22.9446L31.52 23.0987L31.4874 23.2506L31.4538 23.4005L31.4191 23.5484L31.3834 23.6944L31.3466 23.8384L31.3087 23.9807L31.2698 24.1212L31.2297 24.2599L31.1887 24.3969L31.1465 24.5323L31.1033 24.666L31.059 24.7981L31.0136 24.9287L30.9672 25.0577L30.9197 25.1852L30.8711 25.3113L30.8214 25.4358L30.7707 25.5589L30.7189 25.6806L30.666 25.8009L30.6121 25.9198L30.557 26.0374L30.5009 26.1536L30.4437 26.2685L30.3855 26.382L30.3261 26.4942L30.2657 26.6052L30.2042 26.7149L30.1416 26.8233L30.078 26.9304L30.0132 27.0363L29.9474 27.1409L29.8805 27.2444L29.8125 27.3466L29.7433 27.4476L29.6731 27.5473L29.6019 27.6459L29.5295 27.7433L29.456 27.8396L29.3814 27.9346L29.3057 28.0285L29.2289 28.1212L29.151 28.2128L29.072 28.3032L28.9918 28.3924L28.9106 28.4805L28.8282 28.5675L28.7447 28.6533L28.6601 28.738L28.5744 28.8216L28.4875 28.9041L28.3995 28.9854L28.3103 29.0656L28.22 29.1447L28.1285 29.2227L28.0359 29.2996L27.9421 29.3754L27.8472 29.4501L27.751 29.5237L27.6537 29.5961L27.5552 29.6675L27.4555 29.7378L27.3546 29.807L27.2525 29.8751L27.1492 29.9421L27.0447 30.008L26.9389 30.0729L26.8318 30.1366L26.7235 30.1993L26.614 30.2609L26.5031 30.3214L26.391 30.3808L26.2775 30.4391L26.1628 30.4964L26.0467 30.5526L25.9293 30.6077L25.8105 30.6618L25.6903 30.7147L25.5687 30.7666L25.4457 30.8174L25.3212 30.8672L25.1953 30.9158L25.0679 30.9634L24.939 31.01L24.8086 31.0554L24.6766 31.0998L24.543 31.1431L24.4077 31.1853L24.2709 31.2265L24.1323 31.2666L23.9919 31.3057L23.8498 31.3436L23.7059 31.3805L23.5601 31.4163L23.4124 31.4511L23.2626 31.4848L23.1109 31.5174L22.957 31.549L22.8009 31.5795L22.6425 31.6089L22.4818 31.6372L22.3187 31.6645L22.1529 31.6908L21.9845 31.7159L21.8133 31.74L21.6392 31.763L21.4619 31.785L21.2813 31.8059L21.0972 31.8257L20.9094 31.8444L20.7176 31.8621L20.5215 31.8787L20.3207 31.8943L20.1149 31.9088L19.9035 31.9222L19.6859 31.9345L19.4615 31.9458L19.2292 31.956L18.9881 31.9652L18.7366 31.9733L18.4728 31.9803L18.1939 31.9862L17.8958 31.9911L17.5718 31.9949L17.2099 31.9977L16.7816 31.9994L16.1375 32L15.2973 31.9996L14.8527 31.998L14.4828 31.9955L14.1539 31.9918L13.8522 31.9871L13.5705 31.9813L13.3045 31.9745L13.0512 31.9665L12.8085 31.9576L12.575 31.9475L12.3494 31.9364L12.1307 31.9242L11.9184 31.911L11.7117 31.8967L11.5101 31.8813L11.3133 31.8648L11.1208 31.8473L10.9324 31.8287L10.7478 31.8091L10.5666 31.7884L10.3889 31.7666L10.2142 31.7437L10.0425 31.7198L9.87368 31.6948L9.70754 31.6688L9.54397 31.6417L9.38288 31.6135L9.22416 31.5842L9.06772 31.5539L8.91349 31.5225L8.76139 31.4901L8.61134 31.4565L8.46329 31.422L8.31718 31.3863L8.17295 31.3496L8.03056 31.3118L7.88995 31.2729L7.75109 31.233L7.61394 31.192L7.47845 31.1499L7.34459 31.1068L7.21233 31.0625L7.08164 31.0173L6.9525 30.9709L6.82486 30.9235L6.69872 30.875L6.57404 30.8254L6.45081 30.7748L6.32899 30.7231L6.20858 30.6703L6.08956 30.6164L5.9719 30.5615L5.8556 30.5054L5.74063 30.4483L5.62698 30.3902L5.51464 30.3309L5.40359 30.2706L5.29382 30.2092L5.18532 30.1467L5.07808 30.0831L4.97209 30.0184L4.86734 29.9527L4.76382 29.8858L4.66152 29.8179L4.56043 29.7489L4.46055 29.6788L4.36186 29.6076L4.26436 29.5353L4.16804 29.4619L4.0729 29.3874L3.97893 29.3118L3.88612 29.2351L3.79447 29.1572L3.70398 29.0783L3.61463 28.9983L3.52643 28.9171L3.43937 28.8348L3.35344 28.7514L3.26864 28.6669L3.18497 28.5813L3.10243 28.4945L3.021 28.4065L2.9407 28.3175L2.8615 28.2272L2.78342 28.1359L2.70645 28.0433L2.63058 27.9496L2.55582 27.8548L2.48215 27.7587L2.40959 27.6615L2.33812 27.5631L2.26775 27.4635L2.19847 27.3627L2.13028 27.2607L2.06318 27.1575L1.99717 27.053L1.93225 26.9473L1.86841 26.8404L1.80565 26.7322L1.74398 26.6227L1.68339 26.512L1.62388 26.4L1.56545 26.2866L1.50809 26.172L1.45182 26.056L1.39662 25.9387L1.3425 25.82L1.28945 25.6999L1.23748 25.5784L1.18658 25.4555L1.13675 25.3312L1.088 25.2054L1.04032 25.0781L0.993706 24.9493L0.948167 24.819L0.903699 24.6871L0.860301 24.5537L0.817974 24.4186L0.776716 24.2818L0.736527 24.1434L0.697407 24.0032L0.659356 23.8612L0.622374 23.7174L0.58646 23.5718L0.551615 23.4242L0.517837 23.2746L0.485127 23.123L0.453485 22.9693L0.42291 22.8134L0.393403 22.6552L0.364963 22.4947L0.337591 22.3318L0.311285 22.1662L0.286047 21.998L0.261876 21.8271L0.238771 21.6531L0.216734 21.4761L0.195763 21.2958L0.175859 21.112L0.157022 20.9245L0.139252 20.733L0.122549 20.5373L0.106912 20.3369L0.0923421 20.1315L0.0788388 19.9205L0.0664022 19.7035L0.0550322 19.4796L0.044729 19.248L0.0354924 19.0077L0.0273225 18.7571L0.0202193 18.4943L0.0141828 18.2167L0.00921287 17.9203L0.00530965 17.5988L0.0024731 17.2406L0.000703217 16.8195L0 16.2182L0.00036345 15.3384L0.00179357 14.8846L0.00429035 14.5105L0.00785381 14.1789L0.0124839 13.8754L0.0181807 13.5923L0.0249442 13.3252L0.0327743 13.0709L0.0416711 12.8275L0.0516346 12.5933L0.0626647 12.367L0.0747615 12.1479L0.0879251 11.9351L0.102155 11.728L0.117452 11.526L0.133816 11.3288L0.151246 11.136L0.169743 10.9473L0.189307 10.7623L0.209938 10.5809L0.231636 10.4029L0.2544 10.228L0.278232 10.0561L0.30313 9.88702L0.329096 9.72066L0.356128 9.5569L0.384228 9.39561L0.413396 9.2367L0.44363 9.08009L0.474932 8.92568L0.507302 8.77341L0.540739 8.6232L0.575245 8.475L0.610819 8.32873L0.64746 8.18436L0.685171 8.04182L0.72395 7.90107L0.763798 7.76207L0.804716 7.62478L0.846703 7.48916L0.889759 7.35518L0.933887 7.22279L0.979084 7.09198L1.02535 6.96271L1.07269 6.83496L1.12111 6.7087L1.17059 6.5839L1.22115 6.46055L1.27278 6.33863L1.32548 6.21811L1.37926 6.09898L1.43412 5.98121L1.49005 5.8648L1.54706 5.74972L1.60515 5.63597L1.66432 5.52352L1.72456 5.41237L1.78589 5.3025L1.8483 5.1939L1.91179 5.08656L1.97637 4.98048L2.04204 4.87563L2.10879 4.77201L2.17663 4.66961L2.24556 4.56842L2.31559 4.46844L2.3867 4.36966L2.45892 4.27206L2.53223 4.17565L2.60665 4.08042L2.68216 3.98635L2.75878 3.89345L2.83651 3.80171L2.91535 3.71113L2.9953 3.62169L3.07637 3.5334L3.15856 3.44624L3.24187 3.36023L3.32631 3.27534L3.41187 3.19158L3.49857 3.10895L3.58641 3.02743L3.67539 2.94704L3.76552 2.86775L3.8568 2.78958L3.94924 2.71252L4.04284 2.63657L4.13761 2.56171L4.23355 2.48796L4.33067 2.41531L4.42898 2.34376L4.52848 2.2733L4.62919 2.20393L4.7311 2.13565L4.83424 2.06847L4.93859 2.00237L5.04419 1.93736L5.15103 1.87344L5.25912 1.81059L5.36848 1.74884L5.47912 1.68816L5.59105 1.62856L5.70428 1.57004L5.81883 1.51261L5.93471 1.45625L6.05194 1.40096L6.17052 1.34675L6.29049 1.29362L6.41185 1.24156L6.53463 1.19058L6.65885 1.14066L6.78452 1.09182L6.91168 1.04406L7.04034 0.997362L7.17053 0.951738L7.30229 0.907185L7.43563 0.863702L7.5706 0.821289L7.70722 0.779946L7.84553 0.739672L7.98558 0.700467L8.1274 0.662331L8.27104 0.625264L8.41654 0.589265L8.56397 0.554334L8.71337 0.520471L8.86481 0.487676L9.01836 0.455949L9.17409 0.425289L9.33207 0.395697L9.4924 0.367172L9.65516 0.339715L9.82047 0.313324L9.98844 0.288001L10.1592 0.263745L10.3329 0.240555L10.5097 0.218433L10.6897 0.197377L10.8732 0.177389L11.0604 0.158467L11.2516 0.140611L11.447 0.123823L11.647 0.108101L11.852 0.0934464L12.0625 0.0798581L12.279 0.0673366L12.5023 0.0558817L12.7332 0.0454935L12.9728 0.036172L13.2225 0.0279171L13.4842 0.020729L13.7605 0.0146075L14.0552 0.00955264L14.3744 0.00556448L14.7291 0.00264299L15.1433 0.000788159L15.7141 0L16.6191 0.000278509L17.083 0.00162369L17.4615 0.00403553L17.7958 0.00751404L18.1013 0.0120592L18.3858 0.0176711L18.6541 0.0243496L18.9092 0.0320948L19.1535 0.0409066L19.3884 0.0507852L19.6152 0.0617304L19.8349 0.0737423L20.0482 0.0868209L20.2557 0.100966L20.4581 0.116178L20.6556 0.132457L20.8488 0.149802L21.0378 0.168215L21.2231 0.187694L21.4047 0.208239L21.583 0.229852L21.7582 0.252532L21.9303 0.276278L22.0996 0.301092L22.2662 0.326972L22.4301 0.35392L22.5916 0.381935L22.7507 0.411017L22.9075 0.441167L23.0621 0.472384L23.2145 0.504669L23.3649 0.538021L23.5132 0.572442L23.6597 0.60793L23.8042 0.644487L23.9469 0.682112L24.0878 0.720806L24.2269 0.760569L24.3643 0.801402L24.5001 0.843304L24.6342 0.886275L24.7667 0.930317L24.8976 0.97543L25.027 1.02161L25.1549 1.06887L25.2813 1.11719L25.4062 1.16659L25.5296 1.21707L25.6517 1.26861L25.7723 1.32123L25.8916 1.37493L26.0094 1.4297L26.126 1.48554L26.2411 1.54247L26.355 1.60047L26.4675 1.65955L26.5788 1.71971L26.6888 1.78095L26.7975 1.84328L26.9049 1.90668L27.0111 1.97117L27.116 2.03675L27.2198 2.10342L27.3223 2.17117L27.4235 2.24002L27.5236 2.30995L27.6225 2.38099L27.7202 2.45311L27.8167 2.52634L27.912 2.60066L28.0062 2.67609L28.0992 2.75262L28.191 2.83027L28.2817 2.90902L28.3712 2.98888L28.4596 3.06986L28.5468 3.15196L28.6329 3.23518L28.7179 3.31953L28.8018 3.405L28.8845 3.49161L28.9661 3.57936L29.0466 3.66825L29.1259 3.75829L29.2042 3.84948L29.2814 3.94182L29.3574 4.03533L29.4323 4.13L29.5062 4.22585L29.5789 4.32288L29.6506 4.42109L29.7211 4.5205L29.7906 4.62111L29.8589 4.72293L29.9262 4.82596L29.9924 4.93022L30.0575 5.03572L30.1215 5.14246L30.1844 5.25045L30.2463 5.35971L30.307 5.47025L30.3667 5.58208L30.4253 5.69521L30.4828 5.80965L30.5393 5.92542L30.5946 6.04254L30.6489 6.16102L30.7022 6.28087L30.7543 6.40212L30.8054 6.52479L30.8554 6.64889L30.9043 6.77445L30.9522 6.90148L30.9989 7.03003L31.0446 7.1601L31.0893 7.29173L31.1328 7.42494L31.1753 7.55978L31.2168 7.69627L31.2571 7.83444L31.2964 7.97435L31.3346 8.11603L31.3718 8.25952L31.4079 8.40488L31.4429 8.55215L31.4768 8.70139L31.5097 8.85267L31.5415 9.00604L31.5723 9.16159L31.602 9.31939L31.6306 9.47953L31.6581 9.6421L31.6846 9.8072L31.71 9.97496L31.7343 10.1455L31.7576 10.3189L31.7798 10.4955L31.801 10.6752L31.821 10.8584L31.84 11.0453L31.858 11.2362L31.8749 11.4312L31.8907 11.6308L31.9054 11.8354L31.9191 12.0455L31.9317 12.2615L31.9432 12.4842L31.9537 12.7145L31.9631 12.9534L31.9714 13.2022L31.9787 13.4629L31.9849 13.7379L31.9901 14.0309L31.9941 14.3479L31.9971 14.6991L31.9991 15.107L31.9999 15.6536L32 16Z"
                  />
                </mask>
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M32 16L31.9995 16.7426L31.9979 17.1788L31.9952 17.5446L31.9915 17.871L31.9867 18.1709L31.9808 18.4512L31.9739 18.7161L31.9659 18.9685L31.9568 19.2104L31.9467 19.4433L31.9355 19.6683L31.9232 19.8864L31.9099 20.0983L31.8955 20.3045L31.88 20.5057L31.8635 20.7021L31.8459 20.8943L31.8272 21.0824L31.8075 21.2668L31.7867 21.4476L31.7648 21.6252L31.7419 21.7996L31.7179 21.971L31.6928 22.1396L31.6667 22.3056L31.6395 22.4689L31.6112 22.6298L31.5818 22.7884L31.5514 22.9446L31.52 23.0987L31.4874 23.2506L31.4538 23.4005L31.4191 23.5484L31.3834 23.6944L31.3466 23.8384L31.3087 23.9807L31.2698 24.1212L31.2297 24.2599L31.1887 24.3969L31.1465 24.5323L31.1033 24.666L31.059 24.7981L31.0136 24.9287L30.9672 25.0577L30.9197 25.1852L30.8711 25.3113L30.8214 25.4358L30.7707 25.5589L30.7189 25.6806L30.666 25.8009L30.6121 25.9198L30.557 26.0374L30.5009 26.1536L30.4437 26.2685L30.3855 26.382L30.3261 26.4942L30.2657 26.6052L30.2042 26.7149L30.1416 26.8233L30.078 26.9304L30.0132 27.0363L29.9474 27.1409L29.8805 27.2444L29.8125 27.3466L29.7433 27.4476L29.6731 27.5473L29.6019 27.6459L29.5295 27.7433L29.456 27.8396L29.3814 27.9346L29.3057 28.0285L29.2289 28.1212L29.151 28.2128L29.072 28.3032L28.9918 28.3924L28.9106 28.4805L28.8282 28.5675L28.7447 28.6533L28.6601 28.738L28.5744 28.8216L28.4875 28.9041L28.3995 28.9854L28.3103 29.0656L28.22 29.1447L28.1285 29.2227L28.0359 29.2996L27.9421 29.3754L27.8472 29.4501L27.751 29.5237L27.6537 29.5961L27.5552 29.6675L27.4555 29.7378L27.3546 29.807L27.2525 29.8751L27.1492 29.9421L27.0447 30.008L26.9389 30.0729L26.8318 30.1366L26.7235 30.1993L26.614 30.2609L26.5031 30.3214L26.391 30.3808L26.2775 30.4391L26.1628 30.4964L26.0467 30.5526L25.9293 30.6077L25.8105 30.6618L25.6903 30.7147L25.5687 30.7666L25.4457 30.8174L25.3212 30.8672L25.1953 30.9158L25.0679 30.9634L24.939 31.01L24.8086 31.0554L24.6766 31.0998L24.543 31.1431L24.4077 31.1853L24.2709 31.2265L24.1323 31.2666L23.9919 31.3057L23.8498 31.3436L23.7059 31.3805L23.5601 31.4163L23.4124 31.4511L23.2626 31.4848L23.1109 31.5174L22.957 31.549L22.8009 31.5795L22.6425 31.6089L22.4818 31.6372L22.3187 31.6645L22.1529 31.6908L21.9845 31.7159L21.8133 31.74L21.6392 31.763L21.4619 31.785L21.2813 31.8059L21.0972 31.8257L20.9094 31.8444L20.7176 31.8621L20.5215 31.8787L20.3207 31.8943L20.1149 31.9088L19.9035 31.9222L19.6859 31.9345L19.4615 31.9458L19.2292 31.956L18.9881 31.9652L18.7366 31.9733L18.4728 31.9803L18.1939 31.9862L17.8958 31.9911L17.5718 31.9949L17.2099 31.9977L16.7816 31.9994L16.1375 32L15.2973 31.9996L14.8527 31.998L14.4828 31.9955L14.1539 31.9918L13.8522 31.9871L13.5705 31.9813L13.3045 31.9745L13.0512 31.9665L12.8085 31.9576L12.575 31.9475L12.3494 31.9364L12.1307 31.9242L11.9184 31.911L11.7117 31.8967L11.5101 31.8813L11.3133 31.8648L11.1208 31.8473L10.9324 31.8287L10.7478 31.8091L10.5666 31.7884L10.3889 31.7666L10.2142 31.7437L10.0425 31.7198L9.87368 31.6948L9.70754 31.6688L9.54397 31.6417L9.38288 31.6135L9.22416 31.5842L9.06772 31.5539L8.91349 31.5225L8.76139 31.4901L8.61134 31.4565L8.46329 31.422L8.31718 31.3863L8.17295 31.3496L8.03056 31.3118L7.88995 31.2729L7.75109 31.233L7.61394 31.192L7.47845 31.1499L7.34459 31.1068L7.21233 31.0625L7.08164 31.0173L6.9525 30.9709L6.82486 30.9235L6.69872 30.875L6.57404 30.8254L6.45081 30.7748L6.32899 30.7231L6.20858 30.6703L6.08956 30.6164L5.9719 30.5615L5.8556 30.5054L5.74063 30.4483L5.62698 30.3902L5.51464 30.3309L5.40359 30.2706L5.29382 30.2092L5.18532 30.1467L5.07808 30.0831L4.97209 30.0184L4.86734 29.9527L4.76382 29.8858L4.66152 29.8179L4.56043 29.7489L4.46055 29.6788L4.36186 29.6076L4.26436 29.5353L4.16804 29.4619L4.0729 29.3874L3.97893 29.3118L3.88612 29.2351L3.79447 29.1572L3.70398 29.0783L3.61463 28.9983L3.52643 28.9171L3.43937 28.8348L3.35344 28.7514L3.26864 28.6669L3.18497 28.5813L3.10243 28.4945L3.021 28.4065L2.9407 28.3175L2.8615 28.2272L2.78342 28.1359L2.70645 28.0433L2.63058 27.9496L2.55582 27.8548L2.48215 27.7587L2.40959 27.6615L2.33812 27.5631L2.26775 27.4635L2.19847 27.3627L2.13028 27.2607L2.06318 27.1575L1.99717 27.053L1.93225 26.9473L1.86841 26.8404L1.80565 26.7322L1.74398 26.6227L1.68339 26.512L1.62388 26.4L1.56545 26.2866L1.50809 26.172L1.45182 26.056L1.39662 25.9387L1.3425 25.82L1.28945 25.6999L1.23748 25.5784L1.18658 25.4555L1.13675 25.3312L1.088 25.2054L1.04032 25.0781L0.993706 24.9493L0.948167 24.819L0.903699 24.6871L0.860301 24.5537L0.817974 24.4186L0.776716 24.2818L0.736527 24.1434L0.697407 24.0032L0.659356 23.8612L0.622374 23.7174L0.58646 23.5718L0.551615 23.4242L0.517837 23.2746L0.485127 23.123L0.453485 22.9693L0.42291 22.8134L0.393403 22.6552L0.364963 22.4947L0.337591 22.3318L0.311285 22.1662L0.286047 21.998L0.261876 21.8271L0.238771 21.6531L0.216734 21.4761L0.195763 21.2958L0.175859 21.112L0.157022 20.9245L0.139252 20.733L0.122549 20.5373L0.106912 20.3369L0.0923421 20.1315L0.0788388 19.9205L0.0664022 19.7035L0.0550322 19.4796L0.044729 19.248L0.0354924 19.0077L0.0273225 18.7571L0.0202193 18.4943L0.0141828 18.2167L0.00921287 17.9203L0.00530965 17.5988L0.0024731 17.2406L0.000703217 16.8195L0 16.2182L0.00036345 15.3384L0.00179357 14.8846L0.00429035 14.5105L0.00785381 14.1789L0.0124839 13.8754L0.0181807 13.5923L0.0249442 13.3252L0.0327743 13.0709L0.0416711 12.8275L0.0516346 12.5933L0.0626647 12.367L0.0747615 12.1479L0.0879251 11.9351L0.102155 11.728L0.117452 11.526L0.133816 11.3288L0.151246 11.136L0.169743 10.9473L0.189307 10.7623L0.209938 10.5809L0.231636 10.4029L0.2544 10.228L0.278232 10.0561L0.30313 9.88702L0.329096 9.72066L0.356128 9.5569L0.384228 9.39561L0.413396 9.2367L0.44363 9.08009L0.474932 8.92568L0.507302 8.77341L0.540739 8.6232L0.575245 8.475L0.610819 8.32873L0.64746 8.18436L0.685171 8.04182L0.72395 7.90107L0.763798 7.76207L0.804716 7.62478L0.846703 7.48916L0.889759 7.35518L0.933887 7.22279L0.979084 7.09198L1.02535 6.96271L1.07269 6.83496L1.12111 6.7087L1.17059 6.5839L1.22115 6.46055L1.27278 6.33863L1.32548 6.21811L1.37926 6.09898L1.43412 5.98121L1.49005 5.8648L1.54706 5.74972L1.60515 5.63597L1.66432 5.52352L1.72456 5.41237L1.78589 5.3025L1.8483 5.1939L1.91179 5.08656L1.97637 4.98048L2.04204 4.87563L2.10879 4.77201L2.17663 4.66961L2.24556 4.56842L2.31559 4.46844L2.3867 4.36966L2.45892 4.27206L2.53223 4.17565L2.60665 4.08042L2.68216 3.98635L2.75878 3.89345L2.83651 3.80171L2.91535 3.71113L2.9953 3.62169L3.07637 3.5334L3.15856 3.44624L3.24187 3.36023L3.32631 3.27534L3.41187 3.19158L3.49857 3.10895L3.58641 3.02743L3.67539 2.94704L3.76552 2.86775L3.8568 2.78958L3.94924 2.71252L4.04284 2.63657L4.13761 2.56171L4.23355 2.48796L4.33067 2.41531L4.42898 2.34376L4.52848 2.2733L4.62919 2.20393L4.7311 2.13565L4.83424 2.06847L4.93859 2.00237L5.04419 1.93736L5.15103 1.87344L5.25912 1.81059L5.36848 1.74884L5.47912 1.68816L5.59105 1.62856L5.70428 1.57004L5.81883 1.51261L5.93471 1.45625L6.05194 1.40096L6.17052 1.34675L6.29049 1.29362L6.41185 1.24156L6.53463 1.19058L6.65885 1.14066L6.78452 1.09182L6.91168 1.04406L7.04034 0.997362L7.17053 0.951738L7.30229 0.907185L7.43563 0.863702L7.5706 0.821289L7.70722 0.779946L7.84553 0.739672L7.98558 0.700467L8.1274 0.662331L8.27104 0.625264L8.41654 0.589265L8.56397 0.554334L8.71337 0.520471L8.86481 0.487676L9.01836 0.455949L9.17409 0.425289L9.33207 0.395697L9.4924 0.367172L9.65516 0.339715L9.82047 0.313324L9.98844 0.288001L10.1592 0.263745L10.3329 0.240555L10.5097 0.218433L10.6897 0.197377L10.8732 0.177389L11.0604 0.158467L11.2516 0.140611L11.447 0.123823L11.647 0.108101L11.852 0.0934464L12.0625 0.0798581L12.279 0.0673366L12.5023 0.0558817L12.7332 0.0454935L12.9728 0.036172L13.2225 0.0279171L13.4842 0.020729L13.7605 0.0146075L14.0552 0.00955264L14.3744 0.00556448L14.7291 0.00264299L15.1433 0.000788159L15.7141 0L16.6191 0.000278509L17.083 0.00162369L17.4615 0.00403553L17.7958 0.00751404L18.1013 0.0120592L18.3858 0.0176711L18.6541 0.0243496L18.9092 0.0320948L19.1535 0.0409066L19.3884 0.0507852L19.6152 0.0617304L19.8349 0.0737423L20.0482 0.0868209L20.2557 0.100966L20.4581 0.116178L20.6556 0.132457L20.8488 0.149802L21.0378 0.168215L21.2231 0.187694L21.4047 0.208239L21.583 0.229852L21.7582 0.252532L21.9303 0.276278L22.0996 0.301092L22.2662 0.326972L22.4301 0.35392L22.5916 0.381935L22.7507 0.411017L22.9075 0.441167L23.0621 0.472384L23.2145 0.504669L23.3649 0.538021L23.5132 0.572442L23.6597 0.60793L23.8042 0.644487L23.9469 0.682112L24.0878 0.720806L24.2269 0.760569L24.3643 0.801402L24.5001 0.843304L24.6342 0.886275L24.7667 0.930317L24.8976 0.97543L25.027 1.02161L25.1549 1.06887L25.2813 1.11719L25.4062 1.16659L25.5296 1.21707L25.6517 1.26861L25.7723 1.32123L25.8916 1.37493L26.0094 1.4297L26.126 1.48554L26.2411 1.54247L26.355 1.60047L26.4675 1.65955L26.5788 1.71971L26.6888 1.78095L26.7975 1.84328L26.9049 1.90668L27.0111 1.97117L27.116 2.03675L27.2198 2.10342L27.3223 2.17117L27.4235 2.24002L27.5236 2.30995L27.6225 2.38099L27.7202 2.45311L27.8167 2.52634L27.912 2.60066L28.0062 2.67609L28.0992 2.75262L28.191 2.83027L28.2817 2.90902L28.3712 2.98888L28.4596 3.06986L28.5468 3.15196L28.6329 3.23518L28.7179 3.31953L28.8018 3.405L28.8845 3.49161L28.9661 3.57936L29.0466 3.66825L29.1259 3.75829L29.2042 3.84948L29.2814 3.94182L29.3574 4.03533L29.4323 4.13L29.5062 4.22585L29.5789 4.32288L29.6506 4.42109L29.7211 4.5205L29.7906 4.62111L29.8589 4.72293L29.9262 4.82596L29.9924 4.93022L30.0575 5.03572L30.1215 5.14246L30.1844 5.25045L30.2463 5.35971L30.307 5.47025L30.3667 5.58208L30.4253 5.69521L30.4828 5.80965L30.5393 5.92542L30.5946 6.04254L30.6489 6.16102L30.7022 6.28087L30.7543 6.40212L30.8054 6.52479L30.8554 6.64889L30.9043 6.77445L30.9522 6.90148L30.9989 7.03003L31.0446 7.1601L31.0893 7.29173L31.1328 7.42494L31.1753 7.55978L31.2168 7.69627L31.2571 7.83444L31.2964 7.97435L31.3346 8.11603L31.3718 8.25952L31.4079 8.40488L31.4429 8.55215L31.4768 8.70139L31.5097 8.85267L31.5415 9.00604L31.5723 9.16159L31.602 9.31939L31.6306 9.47953L31.6581 9.6421L31.6846 9.8072L31.71 9.97496L31.7343 10.1455L31.7576 10.3189L31.7798 10.4955L31.801 10.6752L31.821 10.8584L31.84 11.0453L31.858 11.2362L31.8749 11.4312L31.8907 11.6308L31.9054 11.8354L31.9191 12.0455L31.9317 12.2615L31.9432 12.4842L31.9537 12.7145L31.9631 12.9534L31.9714 13.2022L31.9787 13.4629L31.9849 13.7379L31.9901 14.0309L31.9941 14.3479L31.9971 14.6991L31.9991 15.107L31.9999 15.6536L32 16Z"
                  stroke="#0077D5"
                  strokeWidth="2"
                  mask="url(#path-1-inside-1_4546_34813)"
                />
                <path
                  d="M7.95517 18.6011C9.00235 18.6011 9.98671 18.5936 10.9651 18.6011C11.5126 18.6085 11.8103 18.8374 11.8672 19.2742C11.93 19.8218 11.6113 20.1898 11.0145 20.1958C9.89097 20.2092 8.77496 20.2033 7.65148 20.2033C7.32536 20.2033 7.00671 20.2167 6.68059 20.1958C6.27817 20.1748 5.88323 20.0911 5.68875 19.6752C5.49427 19.2593 5.6334 18.8853 5.89669 18.5442C6.96482 17.1859 8.03894 15.8185 9.11455 14.4602C9.17738 14.3764 9.23872 14.2941 9.30155 14.2178C9.23273 14.0996 9.1355 14.155 9.05172 14.149C8.30223 14.1415 7.54676 14.149 6.79877 14.1415C6.62524 14.1415 6.4517 14.1206 6.28565 14.0862C5.89071 13.9964 5.64836 13.6015 5.73812 13.2125C5.80095 12.9492 6.00889 12.7338 6.27218 12.671C6.43824 12.6291 6.61177 12.6081 6.78531 12.6081C8.01949 12.6007 9.26116 12.6007 10.4953 12.6081C10.7167 12.6007 10.9322 12.6291 11.1476 12.6844C11.6188 12.8445 11.8208 13.2813 11.6323 13.7391C11.4662 14.1341 11.2029 14.4736 10.9382 14.8132C10.0301 15.9711 9.12203 17.1215 8.21247 18.266C8.13468 18.3587 8.06587 18.4485 7.95517 18.6011Z"
                  fill="#0077D5"
                />
                <path
                  d="M16.0018 14.9547C16.1678 14.7393 16.3414 14.5388 16.6256 14.4835C17.1731 14.3727 17.6863 14.7258 17.6937 15.2808C17.7147 16.6676 17.7072 18.0544 17.6937 19.4411C17.6937 19.8017 17.4574 20.1203 17.1178 20.225C16.7707 20.3567 16.3758 20.2535 16.1469 19.9543C16.0287 19.8091 15.9808 19.7807 15.8148 19.9124C15.1835 20.4255 14.4699 20.5153 13.6995 20.2654C12.4653 19.863 11.9596 18.8996 11.8205 17.7282C11.6754 16.4596 12.0973 15.378 13.2357 14.7123C14.1782 14.1513 15.1341 14.1992 16.0018 14.9547ZM13.5469 17.4859C13.5603 17.7911 13.6576 18.0828 13.8386 18.3251C14.2126 18.8248 14.9277 18.928 15.4333 18.554C15.5171 18.4912 15.5934 18.4149 15.6622 18.3251C16.0512 17.7985 16.0512 16.9309 15.6622 16.4043C15.4677 16.1335 15.1625 15.9749 14.8364 15.9675C14.0735 15.9196 13.5394 16.509 13.5469 17.4859ZM20.8069 17.5278C20.7515 15.7461 21.9229 14.4146 23.5879 14.3653C25.3562 14.3099 26.6457 15.4962 26.7011 17.2286C26.7564 18.9834 25.6823 20.2235 24.0247 20.3911C22.2146 20.5721 20.7785 19.2616 20.8069 17.5278ZM22.5467 17.3617C22.5333 17.7088 22.6365 18.0484 22.8444 18.3326C23.2259 18.8323 23.9395 18.9295 24.4391 18.5406C24.5154 18.4852 24.5783 18.4164 24.6396 18.3461C25.042 17.8195 25.042 16.9309 24.6471 16.4043C24.4526 16.141 24.1474 15.9749 23.8213 15.9675C23.0748 15.9256 22.5467 16.4941 22.5467 17.3617ZM20.1965 16.1485C20.1965 17.2226 20.204 18.2982 20.1965 19.3723C20.204 19.8645 19.8151 20.2744 19.3229 20.2879C19.2391 20.2879 19.1493 20.2804 19.0656 20.2594C18.7185 20.1697 18.4552 19.8017 18.4552 19.3648V13.8521C18.4552 13.526 18.4477 13.2074 18.4552 12.8813C18.4627 12.3472 18.8023 12.0001 19.3154 12.0001C19.842 11.9926 20.1965 12.3397 20.1965 12.8947C20.204 13.9778 20.1965 15.0669 20.1965 16.1485Z"
                  fill="#0077D5"
                />
              </svg>
              <p>Chát với chúng tôi</p>
            </div>
            <div
              className="user-car-button text-white bg-[#0077D5;]"
              onClick={handleLogout}
            >
              <p className="text-center w-full">Đăng xuất</p>
            </div>
          </section>
        </div>
        <div className="w-full user-card-border border-[1px] border-[#B9BDC1]">
          {" "}
          {activeContent ? (
            activeContent
          ) : (
            <div className="flex w-full items-center justify-center p-[20px]">
              <img
                src="https://cdn.haitrieu.com/wp-content/uploads/2022/07/logo-bao-hiem-xa-hoi-viet-nam.png"
                alt=""
                width="80%"
              />
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

// Components navbar --------------------------------------------------------

const Activities: React.FunctionComponent<HistoryPageProps> = () => {
  const [currentPage, setCurrentPage] = useState("history");
  return (
    <div className="w-full">
      {currentPage === "collaborators" && (
        <ListsHistoryPage onBack={() => setCurrentPage("history")} />
      )}
      {currentPage === "bhyt" && (
        <ListHistoryBHYT onBack={() => setCurrentPage("history")} />
      )}
      {currentPage === "history" && (
        <HistoryPage
          onViewCollaborators={() => setCurrentPage("collaborators")}
          onViewBHYT={() => setCurrentPage("bhyt")}
        />
      )}
    </div>
  );
};

// Components navbar AccountInfoProps ----------------------------------------------------

interface AccountInfoProps {
  user: User;
}

const AccountInfo: React.FC<AccountInfoProps> = ({ user }) => {
  return (
    <section className="rounded-[10px] overflow-hidden">
      <div className="top-account min-h-[200px] relative">
        <img src={imagesIocn.banner} alt="" className="w-full h-full" />
        <div className="p-[20px] flex flex-row items-center gap-2 absolute bottom-0 left-0">
          <img
            className="rounded-full avatar-img cursor-pointer border-[2px] border-white"
            src={user && user.photo ? user.photo : users}
            alt="avatar-img"
          />
          <div className="user">
            <div className="flex flex-col items-center gap-1 name-user">
              <span className="text-white font-medium ">{user?.fullName}</span>
            </div>
            <p className="text-[#D1D1D6] text-[14px] font-normal float-right phone-user">
              {user?.phone}
            </p>
          </div>
        </div>
      </div>
      <div className="bot-account bg-white p-[20px] sm:p-[40px] flex flex-col gap-[20px]">
        <h3 className="text-lg font-bold text-black">Thông tin cá nhân</h3>
        <hr className="border-t-3 border-dashed border-gray-400" />
        <div className="flex flex-row max-w-[296px]">
          <div className="w-[50%]">
            <p className="text-lg font-normal text-[#797D77]">Giới tính</p>
          </div>
          <div className="w-[50%]">
            {/* <p className="text-lg font-normal text-black">Nam</p> */}
          </div>
        </div>
        <div className="flex flex-row max-w-[296px]">
          <div className="w-[50%]">
            <p className="text-lg font-normal text-[#797D77]">Ngày sinh</p>
          </div>
          <div className="w-[50%]">
            {/* <p className="text-lg font-normal text-black">20/09/2000</p> */}
          </div>
        </div>
        <div className="flex flex-row max-w-[296px]">
          <div className="w-[50%]">
            <p className="text-lg font-normal text-[#797D77]">Điện thoại</p>
          </div>
          <div className="w-[50%]">
            {/* <p className="text-lg font-normal text-black">+81 0364 123 456</p> */}
          </div>
        </div>
      </div>
    </section>
  );
};

// Components navbar PartnerInfo-----------------------------------------------------------------

const PartnerInfo: React.FC<AccountInfoProps> = ({ user }) => {
  const [activeTab, setActiveTab] = useState(0);

  const tabs = [
    {
      id: 0,
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="12"
          height="12"
          viewBox="0 0 12 12"
          fill="none"
        >
          <g>
            <path
              d="M6 11.5C7.0878 11.5 8.15117 11.1774 9.05564 10.5731C9.96011 9.96874 10.6651 9.10976 11.0813 8.10476C11.4976 7.09977 11.6065 5.9939 11.3943 4.92701C11.1821 3.86011 10.6583 2.8801 9.88909 2.11092C9.1199 1.34173 8.13989 0.817902 7.073 0.605683C6.0061 0.393465 4.90024 0.502383 3.89524 0.918665C2.89025 1.33495 2.03127 2.0399 1.42692 2.94437C0.822569 3.84884 0.5 4.91221 0.5 6C0.501577 7.45821 1.08155 8.85624 2.11265 9.88735C3.14376 10.9185 4.54179 11.4984 6 11.5ZM6 2.79167C6.13598 2.79167 6.2689 2.83199 6.38195 2.90753C6.49501 2.98308 6.58313 3.09045 6.63517 3.21607C6.6872 3.3417 6.70082 3.47993 6.67429 3.61329C6.64776 3.74666 6.58228 3.86916 6.48614 3.96531C6.38999 4.06145 6.26749 4.12693 6.13413 4.15346C6.00076 4.17999 5.86253 4.16637 5.73691 4.11434C5.61128 4.0623 5.50391 3.97418 5.42836 3.86112C5.35282 3.74806 5.3125 3.61514 5.3125 3.47917C5.3125 3.29683 5.38493 3.12196 5.51386 2.99303C5.6428 2.8641 5.81766 2.79167 6 2.79167ZM5.54167 5.08334H6C6.24312 5.08334 6.47627 5.17991 6.64818 5.35182C6.82009 5.52373 6.91667 5.75689 6.91667 6V8.75C6.91667 8.87156 6.86838 8.98814 6.78242 9.07409C6.69647 9.16005 6.57989 9.20834 6.45833 9.20834C6.33678 9.20834 6.2202 9.16005 6.13424 9.07409C6.04829 8.98814 6 8.87156 6 8.75V6H5.54167C5.42011 6 5.30353 5.95171 5.21758 5.86576C5.13162 5.77981 5.08333 5.66323 5.08333 5.54167C5.08333 5.42011 5.13162 5.30353 5.21758 5.21758C5.30353 5.13162 5.42011 5.08334 5.54167 5.08334Z"
              fill="#676769"
            />
          </g>
          <defs>
            <clipPath id="clip0_4580_55490">
              <rect
                width="11"
                height="11"
                fill="white"
                transform="translate(0.5 0.5)"
              />
            </clipPath>
          </defs>
        </svg>
      ),
      label: "Thông tin giới thiệu",
      content: <TabContent1 />,
    },
    {
      id: 1,
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="12"
          height="12"
          viewBox="0 0 12 12"
          fill="none"
        >
          <g>
            <path
              d="M6 6C7.51878 6 8.75 4.76878 8.75 3.25C8.75 1.73122 7.51878 0.5 6 0.5C4.48122 0.5 3.25 1.73122 3.25 3.25C3.25 4.76878 4.48122 6 6 6Z"
              fill="#676769"
            />
            <path
              d="M6 6.91699C3.72287 6.91953 1.87754 8.76486 1.875 11.042C1.875 11.2951 2.0802 11.5003 2.33333 11.5003H9.66665C9.91978 11.5003 10.125 11.2951 10.125 11.042C10.1225 8.76486 8.27713 6.91951 6 6.91699Z"
              fill="#676769"
            />
          </g>
          <defs>
            <clipPath id="clip0_4580_55502">
              <rect
                width="11"
                height="11"
                fill="white"
                transform="translate(0.5 0.5)"
              />
            </clipPath>
          </defs>
        </svg>
      ),
      label: "Thông tin đối tác",
      content: <TabContent2 user={user} />,
    },
    {
      id: 2,
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="12"
          height="12"
          viewBox="0 0 12 12"
          fill="none"
        >
          <g>
            <path
              d="M9.66797 0.5H4.16797V8.75H10.5846V1.41667C10.5846 0.910416 10.1742 0.5 9.66797 0.5Z"
              fill="#676769"
            />
            <path
              d="M2.79297 0.5C2.03358 0.5 1.41797 1.11561 1.41797 1.875V9.10063C1.66966 8.87444 1.99624 8.74953 2.33464 8.75H3.25129V0.5H2.79297Z"
              fill="#676769"
            />
            <path
              d="M10.5846 11.5003H2.33464C1.82838 11.5003 1.41797 11.0899 1.41797 10.5837C1.41797 10.0774 1.82838 9.66699 2.33464 9.66699H10.5846V11.5003Z"
              fill="#676769"
            />
          </g>
          <defs>
            <clipPath id="clip0_4580_55518">
              <rect
                width="11"
                height="11"
                fill="white"
                transform="translate(0.5 0.5)"
              />
            </clipPath>
          </defs>
        </svg>
      ),
      label: "Báo cáo thống kê",
      content: <TabContent3 />,
    },
  ];

  return (
    <div className="flex flex-col gap-5 p-[20px]">
      <div className="flex border-b flex-wrap">
        {tabs.map((tab) => (
          <button
            key={tab.id}
            className={`flex-1 px-[12px] py-[24px] text-center border-b-2  font-medium text-lg ${
              activeTab === tab.id
                ? "border-blue-500 text-blue-500"
                : "border-transparent text-gray-500 hover:text-blue-500"
            }`}
            onClick={() => setActiveTab(tab.id)}
          >
            <div className="flex items-center gap-2">
              <div
                className={`tab-content-icon ${
                  activeTab === tab.id ? "active-icon" : ""
                } hidden md:inline-block`}
              >
                {tab.icon}
              </div>
              {tab.label}
            </div>
          </button>
        ))}
      </div>
      <div className="user-car-button-1">
        {/* Hiển thị nội dung dựa trên activeContent */}
        {tabs[activeTab]?.content}
      </div>
    </div>
  );
};

// Components navbar RegisterPartnerInfo-------------------------------------------------------------

const RegisterPartnerInfo: React.FC<MyComponentProps> = ({ handleNext }) => {
  return <RegisterPartnerInfoPage handleNext={handleNext} />;
};

// Components navbar Guidelines------------------------------------------------------------------------
const Guidelines = () => (
  <div className="p-1">
    <PrivacyPolicyPage />
  </div>
);

// Components navbar Terms--------------------------------------------------------------------------------
const Terms = () => (
  <div className="p-1">
    <PrivacyPolicyPage />
  </div>
);

// Components navbar Chat---------------------------------------------------------------------------------------
const Chat = () => (
  <div className="flex flex-col items-center justify-center gap-4 w-full p-[40px]">
    <div>
      <img src={imagesIocn.lienhe} alt="" />
    </div>
    <h2 className="text-black text-[20px] font-bold">Chat với chúng tôi</h2>
    <p className="text-black text-[18px] font-normal text-center">
      Kết nối với chúng tôi qua <br />
      Zalo: 1900123456
    </p>
  </div>
);

// Components navbar RegisterCollaborate
const RegisterCollaborate = () => {
  const [frontImageUrl, setFrontImageUrl] = useState<string>("");
  const [backImageUrl, setBackImageUrl] = useState<string>("");
  const frontImageInputRef = useRef<HTMLInputElement>(null);
  const backImageInputRef = useRef<HTMLInputElement>(null);
  const [isUploadingPhotoCitizenFont, setIsUploadingPhotoCitizenFont] =
    useState(false);
  const [isUploadingPhotoCitizenBack, setIsUploadingPhotoCitizenBack] =
    useState(false);
  const [isShowModalSuccess, setisShowModalSuccess] = useState(false);
  const [fullNameHouseHold, setFullNameHouseHold] = useState("");
  const [numberCardId, setNumberCardId] = useState("");
  const [phone, setPhone] = useState("");
  const [email, setEmail] = useState("");
  const [referrerCode, setReferrerCode] = useState("");
  const navigate = useNavigate();

  console.log(isUploadingPhotoCitizenFont);
  console.log(isUploadingPhotoCitizenBack);

  const handleCardClick = (inputRef: React.RefObject<HTMLInputElement>) => {
    if (inputRef.current) {
      inputRef.current.click();
    }
  };

  const handleImageUpload = async (
    event: React.ChangeEvent<HTMLInputElement>,
    setImageUrl: React.Dispatch<React.SetStateAction<string>>
  ) => {
    const token = localStorage.accessToken;
    const file = event.target.files?.[0];
    if (file) {
      const formData = new FormData();
      formData.append("file", file);

      try {
        const response = await axios.post(
          `https://baohiem.dion.vn/account/api/upload-file`,
          formData,
          {
            headers: {
              "Content-Type": "multipart/form-data",
              Authorization: `Bearer ${token}`,
            },
          }
        );
        setImageUrl(response.data.data[0]);
        return response.data.data[0];
      } catch (error) {
        console.error("Error uploading image:", error);
        setIsUploadingPhotoCitizenBack(false);
        setIsUploadingPhotoCitizenFont(false);
      }
    } else {
      setIsUploadingPhotoCitizenBack(false);
      setIsUploadingPhotoCitizenFont(false);
    }
  };

  const inputFullNamCollaborate = () => {
    return (
      <div className="w-full lg1130:w-[49%]">
        <label className="block text-sm font-normal text-gray-900 pb-2">
          Họ và tên <samp className="text-red-600">*</samp>
        </label>
        <Input
          type="text"
          value={fullNameHouseHold}
          className="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 darks:bg-gray-700 darks:border-gray-600 darks:placeholder-gray-400 darks:text-white darks:focus:ring-blue-500 darks:focus:border-blue-500"
          placeholder="Họ và tên"
          onChange={(e) => {
            setFullNameHouseHold(e.target.value);
          }}
        />
      </div>
    );
  };

  const inputReferrerCodeCollaborate = () => {
    return (
      <div className="w-full">
        <label className="block text-sm font-normal text-gray-900 pb-2">
          Nhập mã giới thiệu
        </label>
        <Input
          type="text"
          value={referrerCode}
          className="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 darks:bg-gray-700 darks:border-gray-600 darks:placeholder-gray-400 darks:text-white darks:focus:ring-blue-500 darks:focus:border-blue-500"
          placeholder="Nhập mã giới thiệu nếu có..."
          onChange={(e) => {
            setReferrerCode(e.target.value);
          }}
        />
      </div>
    );
  };

  const inputCCCDCollaborate = () => {
    return (
      <div className="w-full lg1130:w-[49%]">
        <label className="block text-sm font-normal text-gray-900 pb-2">
          Số CCCD chủ hộ <samp className="text-red-600">*</samp>
        </label>
        <Input
          type="number"
          maxLength={12}
          value={numberCardId}
          className="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 darks:bg-gray-700 darks:border-gray-600 darks:placeholder-gray-400 darks:text-white darks:focus:ring-blue-500 darks:focus:border-blue-500"
          placeholder="Số CCCD"
          onChange={(e) => {
            setNumberCardId(e.target.value);
          }}
        />
      </div>
    );
  };

  const inputPhoneCollaborate = () => {
    return (
      <div className="w-full lg1130:w-[49%]">
        <label className="block text-sm font-normal text-gray-900 pb-2">
          Số điện thoại <samp className="text-red-600">*</samp>
        </label>
        <Input
          type="number"
          maxLength={12}
          value={phone}
          className="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 darks:bg-gray-700 darks:border-gray-600 darks:placeholder-gray-400 darks:text-white darks:focus:ring-blue-500 darks:focus:border-blue-500"
          placeholder="Số điện thoại"
          onChange={(e) => {
            setPhone(e.target.value);
          }}
        />
      </div>
    );
  };

  const inputEmailCollaborate = () => {
    return (
      <div className="w-full lg1130:w-[49%]">
        <label className="block text-sm font-normal text-gray-900 pb-2">
          Email <samp className="text-red-600">*</samp>
        </label>
        <Input
          type="text"
          value={email}
          className="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 darks:bg-gray-700 darks:border-gray-600 darks:placeholder-gray-400 darks:text-white darks:focus:ring-blue-500 darks:focus:border-blue-500"
          placeholder="Địa chỉ Email"
          onChange={(e) => {
            setEmail(e.target.value);
          }}
        />
      </div>
    );
  };

  const uploadImage = () => {
    return (
      <div className="m-4 bg-white rounded-xl border border-[#B9BDC1] overflow-hidden flex flex-col gap-4">
        <div className="flex justify-between">
          <h3 className="text-base font-semibold text-[#fff] w-full p-[20px] bg-[#0077D5]">
            Ảnh CCCD 2 mặt
          </h3>
        </div>
        <div className="flex flex-row gap-2 justify-between w-[100%] p-[16px]">
          <div className="flex gap-3 w-[100%]">
            <div className="flex flex-col gap-2 w-[100%]">
              <div
                className={`bg-[#F5F5F5]  rounded-lg p-[${
                  frontImageUrl ? "0px" : "9px"
                }]  card-cccd w-[100%] h-[100px]`}
                onClick={() => handleCardClick(frontImageInputRef)}
              >
                <div className="icon-1">
                  {frontImageUrl ? (
                    <img
                      src={`https://baohiem.dion.vn${frontImageUrl}`}
                      alt="Mặt trước"
                      className="w-[100%] h-[100px] object-center rounded-lg "
                    />
                  ) : (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width={"100%"}
                      height={"81px"}
                      className="mt-[9px]"
                      viewBox="0 0 130 90"
                      fill="none"
                    >
                      <path
                        d="M0.183716 7.50059V20.4506H1.83927V7.50059C1.83927 4.43539 4.06292 1.95059 6.80594 1.95059H18.3948V0.100586H6.80594C3.14859 0.100586 0.183716 3.41363 0.183716 7.50059Z"
                        fill="#0076B7"
                      />
                      <path
                        d="M129.317 7.50058V20.4506H127.661V7.50058C127.661 4.4354 125.438 1.95059 122.695 1.95059H111.106V0.100586H122.695C126.352 0.100586 129.317 3.41368 129.317 7.50058Z"
                        fill="#0076B7"
                      />
                      <path
                        d="M0.183716 81.5006V68.5506H1.83927V81.5006C1.83927 84.5658 4.06292 87.0506 6.80594 87.0506H18.3948V88.9006H6.80594C3.14859 88.9006 0.183716 85.5875 0.183716 81.5006Z"
                        fill="#0076B7"
                      />
                      <path
                        d="M129.317 81.5006V68.5506H127.661V81.5006C127.661 84.5658 125.438 87.0506 122.695 87.0506H111.106V88.9006H122.695C126.352 88.9006 129.317 85.5875 129.317 81.5006Z"
                        fill="#0076B7"
                      />
                    </svg>
                  )}
                </div>
                <div className="icon-2">
                  {frontImageUrl ? (
                    <></>
                  ) : (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="25"
                      height="24"
                      viewBox="0 0 25 24"
                      fill="none"
                    >
                      <path
                        d="M12.25 7.4375C12.5607 7.4375 12.8125 7.68934 12.8125 8V11.4375H16.25C16.5607 11.4375 16.8125 11.6893 16.8125 12C16.8125 12.3107 16.5607 12.5625 16.25 12.5625H12.8125V16C12.8125 16.3107 12.5607 16.5625 12.25 16.5625C11.9393 16.5625 11.6875 16.3107 11.6875 16V12.5625H8.25C7.93934 12.5625 7.6875 12.3107 7.6875 12C7.6875 11.6893 7.93934 11.4375 8.25 11.4375H11.6875V8C11.6875 7.68934 11.9393 7.4375 12.25 7.4375Z"
                        fill="#0076B7"
                      />
                      <path
                        fillRule="evenodd"
                        d="M3.68506 12.0001C3.68506 7.26974 7.51974 3.43506 12.2501 3.43506C16.9804 3.43506 20.8151 7.26974 20.8151 12.0001C20.8151 16.7304 16.9804 20.5651 12.2501 20.5651C7.51974 20.5651 3.68506 16.7304 3.68506 12.0001ZM12.2501 4.56506C8.14382 4.56506 4.81506 7.89382 4.81506 12.0001C4.81506 16.1063 8.14382 19.4351 12.2501 19.4351C16.3563 19.4351 19.6851 16.1063 19.6851 12.0001C19.6851 7.89382 16.3563 4.56506 12.2501 4.56506Z"
                        fill="#0076B7"
                      />
                    </svg>
                  )}
                </div>
              </div>
              <h4 className="text-[15px] text-black text-center">Mặt trước</h4>
              <input
                type="file"
                accept="image/*"
                style={{ display: "none" }}
                ref={frontImageInputRef}
                onChange={(event) => {
                  setIsUploadingPhotoCitizenFont(true);
                  handleImageUpload(event, setFrontImageUrl);
                }}
              />
            </div>
            <div className="flex flex-col gap-2 w-[100%]">
              <div
                className={`bg-[#F5F5F5]  rounded-lg p-[${
                  backImageUrl ? "0px" : "9px"
                }]  card-cccd w-[100%] h-[100px]`}
                onClick={() => handleCardClick(backImageInputRef)}
              >
                <div className="icon-1">
                  {backImageUrl ? (
                    <img
                      src={`https://baohiem.dion.vn${backImageUrl}`}
                      alt="Mặt sau"
                      className="w-[100%] h-[100px] object-center rounded-lg"
                    />
                  ) : (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width={"100%"}
                      height={"81px"}
                      className="mt-[9px]"
                      viewBox="0 0 130 90"
                      fill="none"
                    >
                      <path
                        d="M0.183716 7.50059V20.4506H1.83927V7.50059C1.83927 4.43539 4.06292 1.95059 6.80594 1.95059H18.3948V0.100586H6.80594C3.14859 0.100586 0.183716 3.41363 0.183716 7.50059Z"
                        fill="#0076B7"
                      />
                      <path
                        d="M129.317 7.50058V20.4506H127.661V7.50058C127.661 4.4354 125.438 1.95059 122.695 1.95059H111.106V0.100586H122.695C126.352 0.100586 129.317 3.41368 129.317 7.50058Z"
                        fill="#0076B7"
                      />
                      <path
                        d="M0.183716 81.5006V68.5506H1.83927V81.5006C1.83927 84.5658 4.06292 87.0506 6.80594 87.0506H18.3948V88.9006H6.80594C3.14859 88.9006 0.183716 85.5875 0.183716 81.5006Z"
                        fill="#0076B7"
                      />
                      <path
                        d="M129.317 81.5006V68.5506H127.661V81.5006C127.661 84.5658 125.438 87.0506 122.695 87.0506H111.106V88.9006H122.695C126.352 88.9006 129.317 85.5875 129.317 81.5006Z"
                        fill="#0076B7"
                      />
                    </svg>
                  )}
                </div>
                <div className="icon-2">
                  {backImageUrl ? (
                    <></>
                  ) : (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="25"
                      height="24"
                      viewBox="0 0 25 24"
                      fill="none"
                    >
                      <path
                        d="M12.25 7.4375C12.5607 7.4375 12.8125 7.68934 12.8125 8V11.4375H16.25C16.5607 11.4375 16.8125 11.6893 16.8125 12C16.8125 12.3107 16.5607 12.5625 16.25 12.5625H12.8125V16C12.8125 16.3107 12.5607 16.5625 12.25 16.5625C11.9393 16.5625 11.6875 16.3107 11.6875 16V12.5625H8.25C7.93934 12.5625 7.6875 12.3107 7.6875 12C7.6875 11.6893 7.93934 11.4375 8.25 11.4375H11.6875V8C11.6875 7.68934 11.9393 7.4375 12.25 7.4375Z"
                        fill="#0076B7"
                      />
                      <path
                        fillRule="evenodd"
                        d="M3.68506 12.0001C3.68506 7.26974 7.51974 3.43506 12.2501 3.43506C16.9804 3.43506 20.8151 7.26974 20.8151 12.0001C20.8151 16.7304 16.9804 20.5651 12.2501 20.5651C7.51974 20.5651 3.68506 16.7304 3.68506 12.0001ZM12.2501 4.56506C8.14382 4.56506 4.81506 7.89382 4.81506 12.0001C4.81506 16.1063 8.14382 19.4351 12.2501 19.4351C16.3563 19.4351 19.6851 16.1063 19.6851 12.0001C19.6851 7.89382 16.3563 4.56506 12.2501 4.56506Z"
                        fill="#0076B7"
                      />
                    </svg>
                  )}
                </div>
              </div>
              <h4 className="text-[15px] text-black text-center">Mặt sau</h4>
              <input
                type="file"
                accept="image/*"
                ref={backImageInputRef}
                style={{ display: "none" }}
                onChange={(event) => {
                  setIsUploadingPhotoCitizenBack(true);
                  handleImageUpload(event, setBackImageUrl);
                }}
              />
            </div>
          </div>
        </div>
      </div>
    );
  };

  const modal = () => {
    return (
      <Modal
        isOpen={isShowModalSuccess}
        ariaHideApp={false}
        onRequestClose={() => setisShowModalSuccess(false)}
        style={{
          content: {
            top: "50%",
            left: "50%",
            right: "auto",
            bottom: "auto",
            marginRight: "-50%",
            transform: "translate(-50%, -50%)",
            backgroundColor: "#fff",
            border: "none",
            borderRadius: "15px",
            padding: 0,
            width: "100%",
            height: "100%",
            maxWidth: "400px",
            maxHeight: "323px",
            overflow: "auto",
          },
          overlay: {
            backgroundColor: "rgba(0, 0, 0, 0.3)",
          },
        }}
      >
        <div className="w-full p-4 bg-white flex items-center justify-center gap-2 rounded-xl">
          <div className="w-full flex items-center justify-center">
            <img src={imagesIocn.lienhe} alt="" />
          </div>
          <div className="text-center text-[18px] font-semibold  mt-3">
            Thông báo
          </div>
          <div className="text-center text-[15x] font-normal mt-3">
            Đăng ký thành công! <br /> Vui lòng chờ hệ thống phản hồi kết quả!
          </div>

          <button
            className="px-[24px]  mt-6 py-2 bg-[#0076B7] w-full rounded-full bg-[#0076B7] text-base font-normal text-white text-center"
            type="submit"
          >
            Đồng ý
          </button>
        </div>
      </Modal>
    );
  };

  const validateForm = () => {
    // Name
    if (!isValidEmptyString(fullNameHouseHold)) {
      toast.warn("Họ và tên chủ hộ không được để trống!");
      return false;
    }

    //numberCardId
    if (!isValidEmptyString(numberCardId)) {
      toast.warn("Số CCCD không được để trống!");
      return false;
    }

    if (numberCardId.length != 12) {
      toast.warn("Số căn cước công dân phải là 12 chữ số!");
      return false;
    }

    // Phone
    if (!isValidEmptyString(phone)) {
      toast.warn("Số điện thoại không được để trống!");
      return false;
    }

    if (!isValidPhone(phone)) {
      toast.warn("Số điện thoại không hợp lệ!");
      return false;
    }

    // Email
    if (!isValidEmptyString(email)) {
      toast.warn("Email không được để trống!");
      return false;
    }

    if (!isValidEmail(email)) {
      toast.warn("Email không hợp lệ!");
      return false;
    }

    if (frontImageUrl == "") {
      toast.warn("Vui lòng cập nhật mặt trước CCCD!");
      return false;
    }

    if (backImageUrl == "") {
      toast.warn("Vui lòng cập nhật mặt sau CCCD!");
      return false;
    }

    return true;
  };

  const onSubmit = async () => {
    if (validateForm()) {
      const token = localStorage.accessToken;

      const data = {
        name: fullNameHouseHold,
        citizenId: numberCardId,
        phone: phone,
        email: email,
        imgCitizenFront: frontImageUrl,
        imgCitizenBack: backImageUrl,
        referrerCode: referrerCode != "" ? referrerCode : null,
      };

      // console.log(data);

      // console.log(localStorage.referrerCode);

      try {
        const response = await axios.post(
          `https://baohiem.dion.vn/account/api/register-contributor`,
          data,
          {
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
          }
        );

        if (response.data.message == "SUCCESS") {
          toast.success("Đăng ký cộng tác viên thành công!");

          // Lấy dữ liệu hiện tại từ localStorage.profile
          const currentProfile = localStorage.getItem("profile")
            ? JSON.parse(localStorage.getItem("profile") as string) // Ép kiểu để chắc chắn rằng giá trị không null
            : {};

          // Cập nhật chỉ trường roleId
          currentProfile.roleId = 1003;

          // Lưu lại dữ liệu đã cập nhật vào localStorage
          localStorage.setItem("profile", JSON.stringify(currentProfile));

          modal();
          navigate("/");
        } else {
          toast.error("Đăng ký cộng tác viên thất bại, Vui lòng thử lại sau!");
        }
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
      } catch (error) {
        toast.error("Đăng ký cộng tác viên thất bại, Vui lòng thử lại sau!");
      }
    }
  };

  return (
    <div className="flex flex-col gap-3">
      <div className="m-4 bg-white rounded-xl border border-[#B9BDC1] overflow-hidden">
        <h3 className="text-base font-semibold text-[#fff] w-full p-[20px] bg-[#0077D5]">
          Thông tin cộng tác viên
        </h3>
        <div className="p-[16px] flex flex-row flex-wrap justify-between w-full gap-2">
          {inputFullNamCollaborate()}

          {inputCCCDCollaborate()}

          {inputPhoneCollaborate()}

          {inputEmailCollaborate()}

          {inputReferrerCodeCollaborate()}
        </div>
      </div>

      {uploadImage()}

      <div className="m-4 ">
        <button
          className="px-[24px] py-3 bg-[#0076B7] w-full rounded-full  text-base font-normal text-white text-center"
          onClick={onSubmit}
        >
          Đăng ký
        </button>
      </div>

      {modal()}
    </div>
  );
};

// TabContent--------------------------------------------------------

const TabContent1 = () => {
  return (
    <div className="w-full">
      <IntroducingPartnersPage />
    </div>
  );
};

interface TabContent2Props {
  user: User;
}
const TabContent2: React.FC<TabContent2Props> = ({ user }) => {
  const [showCollaborators1, setShowCollaborators1] = useState(false);
  return (
    <div className="w-full">
      {showCollaborators1 ? (
        <BankInfoPage onBack1={() => setShowCollaborators1(false)} />
      ) : (
        <ProfilePartnerDetailPage
          onViewCollaborators1={() => setShowCollaborators1(true)}
          user={user}
        />
      )}
    </div>
  );
};

const TabContent3 = () => {
  const [showCollaborators, setShowCollaborators] = useState(false);
  return (
    <div className="w-full">
      {showCollaborators ? (
        <ListCollabrorates onBack={() => setShowCollaborators(false)} />
      ) : (
        <ReportPartnerPage
          onViewCollaborators={() => setShowCollaborators(true)}
        />
      )}
    </div>
  );
};

export default UserPage;
